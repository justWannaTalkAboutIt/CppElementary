#pragma once //防止头文件重复包含
#include <iostream> //包含输入输出流的头文件
using namespace std;//使用标准命名空间
#include "Worker.h"
#include <fstream>
#define FILENAME "empFile.txt"
//职工管理类workerManager

//与用户的沟通界面：给用户提供菜单界面，让用户选择不同的功能
//对职工的增删改查的操作：对这些功能的实现
//与文件的读写交互：增删完用户，或修改完用户，同步到文件的操作

class WorkerManager 
{
public:
	WorkerManager(); //构造函数声明

	void ShowMenu();//展示菜单 函数声明

	void ExitSystem();  // 退出系统

	//属性 记录职工人数
	int m_EmpNum;

	//属性 职工数组指针
	Worker** m_EmpArray;
	//用一级指针也可以，但是二级指针比较好扩展
	//然后主要是为了体现多态吧，数组由父类指针构成，然后用父类指针指向子类new对象
	//然后new在堆里开辟空间，便于灵活控制生命周期;

	//-------------------功能1-添加 涉及到的函数的声明-------------------
	//添加职工的函数声明
	void Add_Emp(); //这里进行声明，下一步跳到.cpp中实现

	//保存文件
	void save();

	//判断文件是否为空 的标志
	bool m_FileIsEmpty;

	//如果文件不为空，则需要在添加、展示之前，统计一下文件中已经存储了多少人
	//所以定义一个统计文件中人数的函数
	int get_EmpNum();

	//若文件不为空，统计完人数后，还需要按照类型创建对象，以及存储对象的数组
	void init_Emp();

	//-------------------功能2-显示 涉及到的函数的声明-------------------
	//显示职工的函数声明 //这里进行声明，下一步跳到.cpp中实现
	void Show_Emp();

	//-------------------功能3-删除 涉及到的函数的声明-------------------
	//删除职工
	void Del_Emp();

	//按照职工编号判断职工是否存在，若存在返回职工在数组中位置，若不存在返回-1
	int IsExist(int id);

	//-------------------功能4-修改 涉及到的函数的声明-------------------
	void Mod_Emp();

	//-------------------功能5-查询 涉及到的函数的声明-------------------
	void Find_Emp();

	int IsExist(string name);

	//-------------------功能6-排序 涉及到的函数的声明-------------------
	void Sort_Emp();

	//-------------------功能7-清空 涉及到的函数的声明-------------------
	void Clean_File();

	//析构函数声明
	~WorkerManager(); 

};
